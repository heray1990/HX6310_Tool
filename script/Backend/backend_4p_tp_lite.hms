

// use DEBUG I2C
  A:8001_0000:0000_0000


// Backend
  D:FFFF:0000_000E
  D:0004:0870_0118  // vsize = 2160, vde_gen_ext = 280(?)
  D:0008:000F_FFFF  // bypass control (don't cary)

  D:0080:4A16_044C
  D:0084:08CA_03C0
  D:0088:C870_480A
  D:008C:2FFC_0180  // pat = 5, bypassTP = 0
  D:0090:3FFF_FFFF
  D:00DC:0000_0084


// OSD TP
  D:005C:E898_C02C  // tg_release_freerun = 1, tg_en = 1, from backend 1-path tp
//D:005C:6898_C02C  // tg_release_freerun = 1, tg_en = 0, from backend input
  D:0060:0465_0780
  D:0064:0438_2905
  D:0068:0000_0000

  D:0074:0000_FFF1
  D:0078:FFFF_FFFF
  D:007C:03CA_0222

//D:0000:0000_0005  // dbg=5   pi_SHR
//D:0000:0000_0014  // dbg=20  po_SHR
//D:0000:0000_0038  // dbg=55  pi_port_train


  A:18000000:0438_0780  //vsize,hsize
  A:18000004:00F0_C030  //
  A:18000010:0000_0800  //x step
  A:18000014:0000_0800  //y step
  A:18000018:0000_0000
  A:1800001C:0000_0000
  A:18000020:0000_0007
  A:18000024:0001_0000  //TS off
//A:18000024:0000_0000  //TS on
  A:1800002C:0000_00C0
  A:1800005C:0000_0000
  A:18000060:0000_0000
  A:18000064:0000_0000
  A:18000068:0000_0000

  A:18002000:0000_0001
  A:18003000:0000_0001

  A:18001000:0000_0001
  A:18001004:0028_044C  //htotal,hsync
  A:18001008:03C0_0050  //hstart,hsize
  A:1800100C:0005_0898  //vtotal,vsize
  A:18001010:0870_000A  //vstart,vsize
  A:18001014:0001_8605  //reset,count
  A:18001018:0000_0000
  A:1801F000:0000_0001  //double buffer load
  A:1801F018:0000_0000
  A:1801F000:0000_0001  //double buffer load


D:FFFF:00000000

// System 20h
// [26]    clk_pix_1_2 = {*HDMI, HDMI/2}
// [25:24] clk_pix_1_2_4 = {*FRC/2, HDMI, HDMI/4, FRC/4}
// [22:21] clk_frc_i = {*FRC/2, FRC/4, HDMI, 0}
// [20:19] clk_frc_i_s_x8 = {FRC/2, FRC/4, HDMI/4, *PLLS}
// [18:16] clk_frc_o = {*FRC/2, FRC, HDMI/4, HDMI/2, PLLS}
// [14:11] clk_o = {FRC/8, FRC/4, *FRC/2, 3=HDMI/4, 7=HDMI/2, 11=PLLS}
// [10:8]  clk_o2 = {FRC/8, *FRC/4, HDMI/8, HDMI/4, PLLS/2}
// [6:4]   clk_o2_vbo = {FRC/8, *FRC/4, HDMI/8, HDMI/4, PLLS/2}
// [3]     clk_s = {PLLS/8, *PLLS/4}
// [2]     clk_s_apb = {PLLS/8, *PLLS/4}
// [1]     clk_s_ahb = {PLLS/4, *PLLS/2}
// [0]     clk_s_cpu = {PLLS/2, *PLLS}
D:0020:0018011F